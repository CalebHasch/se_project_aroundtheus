!function(){"use strict";class e{constructor(e,t){this.settingsObj=e,this.form=t,this._submitButton=this.form.querySelector(e.submitButtonSelector),this._inputList=Array.from(this.form.querySelectorAll(e.inputSelector))}enableValidation(){this._inputList.forEach((e=>{this._addInputEvents(e)}))}_addInputEvents(e){e.addEventListener("input",(()=>{this._checkValidity(e),this.toggleSubmitButton()}))}_checkValidity(e){const t=e.nextSibling.nextSibling;e.validity.valid?this._hideError(t,e):this._showError(t,e)}resetValidation(){this.toggleSubmitButton(),this._inputList.forEach((e=>{this._hideError(e.nextSibling.nextSibling,e)}))}_showError(e,t){const i=t.validationMessage;t.classList.add(this.settingsObj.inputErrorClass),e.textContent=i}_hideError(e,t){t.classList.remove(this.settingsObj.inputErrorClass),e.textContent=""}toggleSubmitButton(){this._hasInvalidInput(this._inputList)?(this._submitButton.classList.add(this.settingsObj.inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this.settingsObj.inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}}class t{constructor(e,t,i,r,o){this.image=e.link,this.text=e.name,this.id=e._id,this.isLiked=e.isLiked,this.cardTemplate=document.querySelector(t).content,this.handleImageClick=i,this.handleTrashClick=r,this.handleLikeClick=o,this._cardElement=this.cardTemplate.querySelector(".locations__card").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._deleteButton=this._cardElement.querySelector(".card__delete-icon"),this._likeButton=this._cardElement.querySelector(".card__like-icon")}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this.handleLikeClick(this),this._checkedIfLiked()})),this._deleteButton.addEventListener("click",(()=>{this.handleTrashClick(this)})),this._cardImage.addEventListener("click",this.handleImageClick)}_checkedIfLiked=()=>{this.isLiked?this._likeButton.classList.add("card__like-icon_clicked"):this._likeButton.classList.remove("card__like-icon_clicked")};_removeCard=()=>{this._cardElement.remove()};createCard(){return this._setEventListeners(),this._checkedIfLiked(),this._cardImage.src=this.image,this._cardImage.alt=this.text,this._cardTitle.textContent=this.text,this._cardElement}}class i{constructor(e){this.modal=document.querySelector(e),this.currentId="",this.removeHandler=""}openModal(e){this.modal.classList.add("modal_opened"),this.modal.addEventListener("click",this._handleCloseEvent),document.addEventListener("keydown",this._handleCloseEvent)}closeModal(){this.modal.classList.remove("modal_opened"),this.modal.removeEventListener("click",this._handleCloseEvent),document.removeEventListener("keydown",this._handleCloseEvent)}_handleCloseEvent=e=>{(e.target.classList.contains("modal")||"Escape"==e.key)&&this.closeModal()};setEventListeners(){this.modal.querySelector(".modal__close").addEventListener("click",(()=>this.closeModal()))}}class r extends i{constructor(e,t){super(e),this.submit=t,this.form=this.modal.querySelector(".form"),this.inputs=this.form.querySelectorAll(".form__input"),this.button=this.form.querySelector(".form__submit-button"),this.buttonText=this.button.textContent}renderLoading(e){e?"form-delete-card"===this.form.id?this.button.textContent="Deleting...":this.button.textContent="Saving...":this.button.textContent=this.buttonText}setUpDeleteModal=e=>{this.currentId=e.id,this.removeHandler=e._removeCard,super.openModal()};_getInputValues(){const e={};return this.inputs.forEach((t=>{t.name,e[t.name]=t.value})),e}setInputs(e){this.inputs.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this.form.addEventListener("submit",(e=>{e.preventDefault(),this.renderLoading(!0),new Promise((t=>t(this.submit(e,this._getInputValues()))))}))}}const o=new class{constructor(e){this._authorization="fd5203a5-1f57-4428-b210-42e565daa250"}getUserInfo(){return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{headers:{authorization:this._authorization}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>(e.description=e.about,e))).catch((e=>console.error(e)))}updateUserInfo(e){let{name:t,description:i}=e;return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:i})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}updateUserImage(e){let{avatar:t}=e;return fetch("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getInitialCards(){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:this._authorization}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>e)).catch((e=>console.error(e)))}postCard(e){let{name:t,link:i}=e;return fetch("https://around-api.en.tripleten-services.com/v1/cards",{method:"POST",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:i})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}`,{method:"DELETE",headers:{authorization:this._authorization}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}likeCard(e){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"PUT",headers:{authorization:this._authorization}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}dislikeCard(e){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"DELETE",headers:{authorization:this._authorization}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getAll(){return Promise.all([this.getUserInfo(),this.getInitialCards()]).then((e=>e))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"fd5203a5-1f57-4428-b210-42e565daa250","Content-Type":"application/json"}}),n={formSelector:".form",fieldSelector:".form__field",inputSelector:".form__input",errorSelector:".form__error",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_invalid"},s=document.querySelector(".profile__edit-button"),a=document.querySelector(".profile__add-button"),d=document.querySelector(".profile__pic"),l=document.forms["form-edit-profile"],c=document.forms["form-add-card"],h=document.forms["form-profile-pic"],u=document.querySelector(".location__image"),m=document.querySelector(".location__title"),p={cardPopup:new r("#add-card-modal",(function(e,t){let{title:i,link:r}=t;const n={name:i,link:r};o.postCard(n).then((t=>(f.addItem(t,"prepend"),e.target.reset(),v.cardFormValidation.toggleSubmitButton(),p.cardPopup.closeModal(),p.cardPopup.renderLoading(),t))).catch((e=>console.error(e)))})),profilePopup:new r("#edit-profile-modal",(function(e,t){let{name:i,description:r}=t;o.updateUserInfo({name:i,description:r}).then((()=>{_.setUserInfo({name:i,description:r}),p.profilePopup.closeModal(),p.profilePopup.renderLoading()})).catch((e=>console.error(e)))})),deleteCardPopup:new r("#delete-card-modal",(function(){o.deleteCard(this.currentId).then((()=>{p.deleteCardPopup.removeHandler(),p.deleteCardPopup.closeModal(),p.deleteCardPopup.renderLoading()})).catch((e=>console.error(e)))})),profilePicPopup:new r("#profile-pic-modal",(function(e,t){let{avatar:i}=t;o.updateUserImage({avatar:i}).then((()=>{_.setUserImage({avatar:i}),p.profilePicPopup.closeModal(),p.profilePicPopup.renderLoading(),e.target.reset(),v.picFormValidation.toggleSubmitButton()})).catch((e=>console.error(e)))})),locationPopup:new class extends i{openModal=(e,t,i)=>{let{name:r,link:o}=e;t.src=o,t.alt=r,i.textContent=r,super.openModal()}}("#location-modal")},_=new class{constructor(e,t){let{nameSelector:i,descriptionSelector:r}=e;this.name=document.querySelector(i),this.description=document.querySelector(r),this.image=t}getUserInfo(){return{name:this.name.textContent,description:this.description.textContent}}setUserInfo(e){let{name:t,description:i}=e;this.name.textContent=t,this.description.textContent=i}setUserImage(e){let{avatar:t}=e;this.image.src=t}}({nameSelector:".profile__name",descriptionSelector:".profile__subtitle"},d),f=new class{constructor(e,t){let{renderer:i}=e;this.renderer=i,this.container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this.addItem(e)}))}addItem(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"append";const i=this.renderer(e);this.container[t](i)}}({renderer:function(e){return new t(e,"#locations__card",(()=>{p.locationPopup.openModal(e,u,m)}),p.deleteCardPopup.setUpDeleteModal,k).createCard()}},".locations"),v={editFormValidation:new e(n,l),cardFormValidation:new e(n,c),picFormValidation:new e(n,h)};for(let e in p)p[e].setEventListeners();for(let e in v)v[e].enableValidation();function k(e){e.isLiked?o.dislikeCard(e.id).then((()=>{e.isLiked=!1})).catch((e=>console.error(e))):o.likeCard(e.id).then((()=>{e.isLiked=!0})).catch((e=>console.error(e)))}o.getAll().then((e=>(_.setUserInfo(e[0]),_.setUserImage(e[0]),e))).then((e=>{p.profilePopup.setInputs(_.getUserInfo()),f.renderItems(e[1])})),s.addEventListener("click",(function(){p.profilePopup.openModal(),v.editFormValidation.resetValidation()})),a.addEventListener("click",(function(){p.cardPopup.openModal()})),d.addEventListener("click",(function(){p.profilePicPopup.openModal()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,